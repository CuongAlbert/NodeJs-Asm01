{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Code/NodeJs/asignment/asm1/Assignment 01 Frontend/src/components/browse/MovieList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"../../utils/axios\";\nimport movieTrailer from \"movie-trailer\";\nimport MovieDetail from \"../../components/browse/MovieDetail\";\nimport requests from \"../../utils/requests\";\nimport \"./MovieList.css\";\nconst base_url = \"https://image.tmdb.org/t/p/original\";\nconst movies_limit = 10;\nfunction MovieList({\n  title,\n  fetchUrl,\n  isLargeRow\n}) {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl, {\n        headers: {\n          Authorization: \"8qlOkxz4wq\"\n        }\n      });\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n  const handleClick = movie => {\n    console.log(\"Movie Id\", movie.id);\n    if (selectedMovie && selectedMovie.id === movie.id) {\n      setSelectedMovie(null);\n      setTrailerUrl(\"\");\n    } else {\n      setSelectedMovie(movie);\n      async function fetchData() {\n        const request = await axios.post(requests.fetchVideo, {\n          film_id: movie.id\n        }, {\n          headers: {\n            Authorization: \"8qlOkxz4wq\"\n          }\n        });\n        console.log(\"Request\", request);\n        setTrailerUrl(request.data.results.id);\n      }\n      fetchData();\n      //   movieTrailer(movie?.title || \"\")\n      //     .then((url) => {\n      //       const urlParams = new URLSearchParams(new URL(url).search);\n      //       setTrailerUrl(urlParams.get(\"v\"));\n      //       console.log(urlParams);\n      //     })\n      //     .catch((error) => console.log(error));\n    }\n  };\n  movies.sort((a, b) => b.popularity - a.popularity);\n  movies.splice(movies_limit);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"movie-list-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row_posters sc2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, movies.map(movie => {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      key: movie.id,\n      onClick: () => handleClick(movie),\n      className: `row_poster ${isLargeRow && \"row_posterLarge\"}`,\n      src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n      alt: movie.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, selectedMovie && /*#__PURE__*/React.createElement(MovieDetail, {\n    movieData: selectedMovie,\n    movieTrailer: trailerUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  })));\n}\n_s(MovieList, \"moIVE/yDTd1TC30MEEfsh6udFDQ=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useState","useEffect","axios","movieTrailer","MovieDetail","requests","base_url","movies_limit","MovieList","title","fetchUrl","isLargeRow","_s","movies","setMovies","trailerUrl","setTrailerUrl","selectedMovie","setSelectedMovie","fetchData","request","get","headers","Authorization","data","results","handleClick","movie","console","log","id","post","fetchVideo","film_id","sort","a","b","popularity","splice","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","key","onClick","src","poster_path","backdrop_path","alt","name","style","padding","movieData","_c","$RefreshReg$"],"sources":["/Users/mac/Code/NodeJs/asignment/asm1/Assignment 01 Frontend/src/components/browse/MovieList.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"../../utils/axios\";\nimport movieTrailer from \"movie-trailer\";\nimport MovieDetail from \"../../components/browse/MovieDetail\";\nimport requests from \"../../utils/requests\";\nimport \"./MovieList.css\";\n\nconst base_url = \"https://image.tmdb.org/t/p/original\";\nconst movies_limit = 10;\n\nfunction MovieList({ title, fetchUrl, isLargeRow }) {\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n  const [selectedMovie, setSelectedMovie] = useState(null);\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl, {\n        headers: {\n          Authorization: \"8qlOkxz4wq\",\n        },\n      });\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n\n  const handleClick = (movie) => {\n    console.log(\"Movie Id\", movie.id);\n    if (selectedMovie && selectedMovie.id === movie.id) {\n      setSelectedMovie(null);\n      setTrailerUrl(\"\");\n    } else {\n      setSelectedMovie(movie);\n      async function fetchData() {\n        const request = await axios.post(\n          requests.fetchVideo,\n          {\n            film_id: movie.id,\n          },\n          {\n            headers: {\n              Authorization: \"8qlOkxz4wq\",\n            },\n          }\n        );\n        console.log(\"Request\", request);\n        setTrailerUrl(request.data.results.id);\n      }\n      fetchData();\n      //   movieTrailer(movie?.title || \"\")\n      //     .then((url) => {\n      //       const urlParams = new URLSearchParams(new URL(url).search);\n      //       setTrailerUrl(urlParams.get(\"v\"));\n      //       console.log(urlParams);\n      //     })\n      //     .catch((error) => console.log(error));\n    }\n  };\n\n  movies.sort((a, b) => b.popularity - a.popularity);\n  movies.splice(movies_limit);\n\n  return (\n    <div className=\"row\">\n      <h2 className=\"movie-list-title\">{title}</h2>\n      <div className=\"row_posters sc2\">\n        {movies.map((movie) => {\n          return (\n            <img\n              key={movie.id}\n              onClick={() => handleClick(movie)}\n              className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\n              src={`${base_url}${\n                isLargeRow ? movie.poster_path : movie.backdrop_path\n              }`}\n              alt={movie.name}\n            />\n          );\n        })}\n      </div>\n      <div style={{ padding: \"40px\" }}>\n        {selectedMovie && (\n          <MovieDetail movieData={selectedMovie} movieTrailer={trailerUrl} />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default MovieList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}