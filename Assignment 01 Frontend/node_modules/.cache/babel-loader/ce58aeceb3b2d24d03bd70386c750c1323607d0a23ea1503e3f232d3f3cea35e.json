{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Code/NodeJs/asignment/asm1/Assignment 01 Frontend/src/components/browse/MovieList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"../../utils/axios\";\nimport movieTrailer from \"movie-trailer\";\nimport MovieDetail from \"../../components/browse/MovieDetail\";\nimport \"./MovieList.css\";\nconst base_url = \"https://image.tmdb.org/t/p/original\";\nconst movies_limit = 10;\nfunction MovieList({\n  title,\n  fetchUrl,\n  isLargeRow\n}) {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [test, setTest] = useState([]);\n\n  // useEffect(() => {\n  //   async function fetchData() {\n  //     const request = await axios.get(\"top-rate\", {\n  //       headers: {\n  //         Authorization: `8qlOkxz4wq`,\n  //       },\n  //     });\n  //     setMovies(request.data.results);\n  //     return request;\n  //   }\n  //   fetchData();\n  // }, []);\n\n  useEffect(() => {\n    async function fetchTest() {\n      var myHeaders = new Headers();\n      myHeaders.append(\"Authorization\", \"8qlOkxz4wq\");\n      var requestOptions = {\n        method: \"GET\",\n        headers: myHeaders,\n        redirect: \"follow\"\n      };\n      fetch(\"localhost:8080/api/movies/trending\", requestOptions);\n      try {\n        const response = await fetch(`http://localhost:8080/api/movies/trending`, {\n          method: \"GET\",\n          headers: {\n            Authorization: \"Bearer \" + \"8qlOkxz4wq\"\n          },\n          mode: \"no-cors\",\n          redirect: \"follow\"\n        });\n        if (!response.ok) {\n          throw new Error(`Khong fetch duoc`);\n        }\n        const result = await response.json();\n        console.log(result);\n        setTest(result);\n      } catch (error) {\n        console.log(\"error\", error);\n        throw error;\n      }\n    }\n    fetchTest();\n  });\n  const handleClick = movie => {\n    if (selectedMovie && selectedMovie.id === movie.id) {\n      setSelectedMovie(null);\n      setTrailerUrl(\"\");\n    } else {\n      setSelectedMovie(movie);\n      movieTrailer((movie === null || movie === void 0 ? void 0 : movie.title) || \"\").then(url => {\n        const urlParams = new URLSearchParams(new URL(url).search);\n        setTrailerUrl(urlParams.get(\"v\"));\n      }).catch(error => console.log(error));\n    }\n  };\n  movies.sort((a, b) => b.popularity - a.popularity);\n  movies.splice(movies_limit);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"movie-list-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row_posters sc2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, movies.map(movie => {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      key: movie.id,\n      onClick: () => handleClick(movie),\n      className: `row_poster ${isLargeRow && \"row_posterLarge\"}`,\n      src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n      alt: movie.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, selectedMovie && /*#__PURE__*/React.createElement(MovieDetail, {\n    movieData: selectedMovie,\n    movieTrailer: trailerUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  })));\n}\n_s(MovieList, \"5Y6FNE8Nt7YpjspnU/R027+4new=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useState","useEffect","axios","movieTrailer","MovieDetail","base_url","movies_limit","MovieList","title","fetchUrl","isLargeRow","_s","movies","setMovies","trailerUrl","setTrailerUrl","selectedMovie","setSelectedMovie","test","setTest","fetchTest","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","response","Authorization","mode","ok","Error","result","json","console","log","error","handleClick","movie","id","then","url","urlParams","URLSearchParams","URL","search","get","catch","sort","a","b","popularity","splice","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","key","onClick","src","poster_path","backdrop_path","alt","name","style","padding","movieData","_c","$RefreshReg$"],"sources":["/Users/mac/Code/NodeJs/asignment/asm1/Assignment 01 Frontend/src/components/browse/MovieList.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"../../utils/axios\";\nimport movieTrailer from \"movie-trailer\";\nimport MovieDetail from \"../../components/browse/MovieDetail\";\nimport \"./MovieList.css\";\n\nconst base_url = \"https://image.tmdb.org/t/p/original\";\nconst movies_limit = 10;\n\nfunction MovieList({ title, fetchUrl, isLargeRow }) {\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [test, setTest] = useState([]);\n\n  // useEffect(() => {\n  //   async function fetchData() {\n  //     const request = await axios.get(\"top-rate\", {\n  //       headers: {\n  //         Authorization: `8qlOkxz4wq`,\n  //       },\n  //     });\n  //     setMovies(request.data.results);\n  //     return request;\n  //   }\n  //   fetchData();\n  // }, []);\n\n  useEffect(() => {\n    async function fetchTest() {\n      var myHeaders = new Headers();\n      myHeaders.append(\"Authorization\", \"8qlOkxz4wq\");\n\n      var requestOptions = {\n        method: \"GET\",\n        headers: myHeaders,\n        redirect: \"follow\",\n      };\n\n      fetch(\"localhost:8080/api/movies/trending\", requestOptions);\n      try {\n        const response = await fetch(\n          `http://localhost:8080/api/movies/trending`,\n          {\n            method: \"GET\",\n            headers: {\n              Authorization: \"Bearer \" + \"8qlOkxz4wq\",\n            },\n            mode: \"no-cors\",\n            redirect: \"follow\",\n          }\n        );\n        if (!response.ok) {\n          throw new Error(`Khong fetch duoc`);\n        }\n        const result = await response.json();\n        console.log(result);\n        setTest(result);\n      } catch (error) {\n        console.log(\"error\", error);\n        throw error;\n      }\n    }\n    fetchTest();\n  });\n\n  const handleClick = (movie) => {\n    if (selectedMovie && selectedMovie.id === movie.id) {\n      setSelectedMovie(null);\n      setTrailerUrl(\"\");\n    } else {\n      setSelectedMovie(movie);\n      movieTrailer(movie?.title || \"\")\n        .then((url) => {\n          const urlParams = new URLSearchParams(new URL(url).search);\n          setTrailerUrl(urlParams.get(\"v\"));\n        })\n        .catch((error) => console.log(error));\n    }\n  };\n\n  movies.sort((a, b) => b.popularity - a.popularity);\n  movies.splice(movies_limit);\n\n  return (\n    <div className=\"row\">\n      <h2 className=\"movie-list-title\">{title}</h2>\n      <div className=\"row_posters sc2\">\n        {movies.map((movie) => {\n          return (\n            <img\n              key={movie.id}\n              onClick={() => handleClick(movie)}\n              className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\n              src={`${base_url}${\n                isLargeRow ? movie.poster_path : movie.backdrop_path\n              }`}\n              alt={movie.name}\n            />\n          );\n        })}\n      </div>\n      <div style={{ padding: \"40px\" }}>\n        {selectedMovie && (\n          <MovieDetail movieData={selectedMovie} movieTrailer={trailerUrl} />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default MovieList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}